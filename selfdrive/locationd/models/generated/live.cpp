#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3802695452116108024) {
   out_3802695452116108024[0] = 0;
   out_3802695452116108024[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3802695452116108024[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3802695452116108024[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3802695452116108024[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3802695452116108024[5] = -sin(in_vec[1]);
   out_3802695452116108024[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3802695452116108024[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3802695452116108024[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3802695452116108024[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3802695452116108024[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3802695452116108024[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3802695452116108024[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3802695452116108024[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3802695452116108024[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3802695452116108024[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3802695452116108024[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3802695452116108024[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2043090151300958853) {
   out_2043090151300958853[0] = delta_x[0] + nom_x[0];
   out_2043090151300958853[1] = delta_x[1] + nom_x[1];
   out_2043090151300958853[2] = delta_x[2] + nom_x[2];
   out_2043090151300958853[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2043090151300958853[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2043090151300958853[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2043090151300958853[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2043090151300958853[7] = delta_x[6] + nom_x[7];
   out_2043090151300958853[8] = delta_x[7] + nom_x[8];
   out_2043090151300958853[9] = delta_x[8] + nom_x[9];
   out_2043090151300958853[10] = delta_x[9] + nom_x[10];
   out_2043090151300958853[11] = delta_x[10] + nom_x[11];
   out_2043090151300958853[12] = delta_x[11] + nom_x[12];
   out_2043090151300958853[13] = delta_x[12] + nom_x[13];
   out_2043090151300958853[14] = delta_x[13] + nom_x[14];
   out_2043090151300958853[15] = delta_x[14] + nom_x[15];
   out_2043090151300958853[16] = delta_x[15] + nom_x[16];
   out_2043090151300958853[17] = delta_x[16] + nom_x[17];
   out_2043090151300958853[18] = delta_x[17] + nom_x[18];
   out_2043090151300958853[19] = delta_x[18] + nom_x[19];
   out_2043090151300958853[20] = delta_x[19] + nom_x[20];
   out_2043090151300958853[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4795362139913636671) {
   out_4795362139913636671[0] = -nom_x[0] + true_x[0];
   out_4795362139913636671[1] = -nom_x[1] + true_x[1];
   out_4795362139913636671[2] = -nom_x[2] + true_x[2];
   out_4795362139913636671[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4795362139913636671[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4795362139913636671[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4795362139913636671[6] = -nom_x[7] + true_x[7];
   out_4795362139913636671[7] = -nom_x[8] + true_x[8];
   out_4795362139913636671[8] = -nom_x[9] + true_x[9];
   out_4795362139913636671[9] = -nom_x[10] + true_x[10];
   out_4795362139913636671[10] = -nom_x[11] + true_x[11];
   out_4795362139913636671[11] = -nom_x[12] + true_x[12];
   out_4795362139913636671[12] = -nom_x[13] + true_x[13];
   out_4795362139913636671[13] = -nom_x[14] + true_x[14];
   out_4795362139913636671[14] = -nom_x[15] + true_x[15];
   out_4795362139913636671[15] = -nom_x[16] + true_x[16];
   out_4795362139913636671[16] = -nom_x[17] + true_x[17];
   out_4795362139913636671[17] = -nom_x[18] + true_x[18];
   out_4795362139913636671[18] = -nom_x[19] + true_x[19];
   out_4795362139913636671[19] = -nom_x[20] + true_x[20];
   out_4795362139913636671[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3957003700060578281) {
   out_3957003700060578281[0] = 1.0;
   out_3957003700060578281[1] = 0;
   out_3957003700060578281[2] = 0;
   out_3957003700060578281[3] = 0;
   out_3957003700060578281[4] = 0;
   out_3957003700060578281[5] = 0;
   out_3957003700060578281[6] = 0;
   out_3957003700060578281[7] = 0;
   out_3957003700060578281[8] = 0;
   out_3957003700060578281[9] = 0;
   out_3957003700060578281[10] = 0;
   out_3957003700060578281[11] = 0;
   out_3957003700060578281[12] = 0;
   out_3957003700060578281[13] = 0;
   out_3957003700060578281[14] = 0;
   out_3957003700060578281[15] = 0;
   out_3957003700060578281[16] = 0;
   out_3957003700060578281[17] = 0;
   out_3957003700060578281[18] = 0;
   out_3957003700060578281[19] = 0;
   out_3957003700060578281[20] = 0;
   out_3957003700060578281[21] = 0;
   out_3957003700060578281[22] = 1.0;
   out_3957003700060578281[23] = 0;
   out_3957003700060578281[24] = 0;
   out_3957003700060578281[25] = 0;
   out_3957003700060578281[26] = 0;
   out_3957003700060578281[27] = 0;
   out_3957003700060578281[28] = 0;
   out_3957003700060578281[29] = 0;
   out_3957003700060578281[30] = 0;
   out_3957003700060578281[31] = 0;
   out_3957003700060578281[32] = 0;
   out_3957003700060578281[33] = 0;
   out_3957003700060578281[34] = 0;
   out_3957003700060578281[35] = 0;
   out_3957003700060578281[36] = 0;
   out_3957003700060578281[37] = 0;
   out_3957003700060578281[38] = 0;
   out_3957003700060578281[39] = 0;
   out_3957003700060578281[40] = 0;
   out_3957003700060578281[41] = 0;
   out_3957003700060578281[42] = 0;
   out_3957003700060578281[43] = 0;
   out_3957003700060578281[44] = 1.0;
   out_3957003700060578281[45] = 0;
   out_3957003700060578281[46] = 0;
   out_3957003700060578281[47] = 0;
   out_3957003700060578281[48] = 0;
   out_3957003700060578281[49] = 0;
   out_3957003700060578281[50] = 0;
   out_3957003700060578281[51] = 0;
   out_3957003700060578281[52] = 0;
   out_3957003700060578281[53] = 0;
   out_3957003700060578281[54] = 0;
   out_3957003700060578281[55] = 0;
   out_3957003700060578281[56] = 0;
   out_3957003700060578281[57] = 0;
   out_3957003700060578281[58] = 0;
   out_3957003700060578281[59] = 0;
   out_3957003700060578281[60] = 0;
   out_3957003700060578281[61] = 0;
   out_3957003700060578281[62] = 0;
   out_3957003700060578281[63] = 0;
   out_3957003700060578281[64] = 0;
   out_3957003700060578281[65] = 0;
   out_3957003700060578281[66] = -0.5*state[4];
   out_3957003700060578281[67] = -0.5*state[5];
   out_3957003700060578281[68] = -0.5*state[6];
   out_3957003700060578281[69] = 0;
   out_3957003700060578281[70] = 0;
   out_3957003700060578281[71] = 0;
   out_3957003700060578281[72] = 0;
   out_3957003700060578281[73] = 0;
   out_3957003700060578281[74] = 0;
   out_3957003700060578281[75] = 0;
   out_3957003700060578281[76] = 0;
   out_3957003700060578281[77] = 0;
   out_3957003700060578281[78] = 0;
   out_3957003700060578281[79] = 0;
   out_3957003700060578281[80] = 0;
   out_3957003700060578281[81] = 0;
   out_3957003700060578281[82] = 0;
   out_3957003700060578281[83] = 0;
   out_3957003700060578281[84] = 0;
   out_3957003700060578281[85] = 0;
   out_3957003700060578281[86] = 0;
   out_3957003700060578281[87] = 0.5*state[3];
   out_3957003700060578281[88] = 0.5*state[6];
   out_3957003700060578281[89] = -0.5*state[5];
   out_3957003700060578281[90] = 0;
   out_3957003700060578281[91] = 0;
   out_3957003700060578281[92] = 0;
   out_3957003700060578281[93] = 0;
   out_3957003700060578281[94] = 0;
   out_3957003700060578281[95] = 0;
   out_3957003700060578281[96] = 0;
   out_3957003700060578281[97] = 0;
   out_3957003700060578281[98] = 0;
   out_3957003700060578281[99] = 0;
   out_3957003700060578281[100] = 0;
   out_3957003700060578281[101] = 0;
   out_3957003700060578281[102] = 0;
   out_3957003700060578281[103] = 0;
   out_3957003700060578281[104] = 0;
   out_3957003700060578281[105] = 0;
   out_3957003700060578281[106] = 0;
   out_3957003700060578281[107] = 0;
   out_3957003700060578281[108] = -0.5*state[6];
   out_3957003700060578281[109] = 0.5*state[3];
   out_3957003700060578281[110] = 0.5*state[4];
   out_3957003700060578281[111] = 0;
   out_3957003700060578281[112] = 0;
   out_3957003700060578281[113] = 0;
   out_3957003700060578281[114] = 0;
   out_3957003700060578281[115] = 0;
   out_3957003700060578281[116] = 0;
   out_3957003700060578281[117] = 0;
   out_3957003700060578281[118] = 0;
   out_3957003700060578281[119] = 0;
   out_3957003700060578281[120] = 0;
   out_3957003700060578281[121] = 0;
   out_3957003700060578281[122] = 0;
   out_3957003700060578281[123] = 0;
   out_3957003700060578281[124] = 0;
   out_3957003700060578281[125] = 0;
   out_3957003700060578281[126] = 0;
   out_3957003700060578281[127] = 0;
   out_3957003700060578281[128] = 0;
   out_3957003700060578281[129] = 0.5*state[5];
   out_3957003700060578281[130] = -0.5*state[4];
   out_3957003700060578281[131] = 0.5*state[3];
   out_3957003700060578281[132] = 0;
   out_3957003700060578281[133] = 0;
   out_3957003700060578281[134] = 0;
   out_3957003700060578281[135] = 0;
   out_3957003700060578281[136] = 0;
   out_3957003700060578281[137] = 0;
   out_3957003700060578281[138] = 0;
   out_3957003700060578281[139] = 0;
   out_3957003700060578281[140] = 0;
   out_3957003700060578281[141] = 0;
   out_3957003700060578281[142] = 0;
   out_3957003700060578281[143] = 0;
   out_3957003700060578281[144] = 0;
   out_3957003700060578281[145] = 0;
   out_3957003700060578281[146] = 0;
   out_3957003700060578281[147] = 0;
   out_3957003700060578281[148] = 0;
   out_3957003700060578281[149] = 0;
   out_3957003700060578281[150] = 0;
   out_3957003700060578281[151] = 0;
   out_3957003700060578281[152] = 0;
   out_3957003700060578281[153] = 1.0;
   out_3957003700060578281[154] = 0;
   out_3957003700060578281[155] = 0;
   out_3957003700060578281[156] = 0;
   out_3957003700060578281[157] = 0;
   out_3957003700060578281[158] = 0;
   out_3957003700060578281[159] = 0;
   out_3957003700060578281[160] = 0;
   out_3957003700060578281[161] = 0;
   out_3957003700060578281[162] = 0;
   out_3957003700060578281[163] = 0;
   out_3957003700060578281[164] = 0;
   out_3957003700060578281[165] = 0;
   out_3957003700060578281[166] = 0;
   out_3957003700060578281[167] = 0;
   out_3957003700060578281[168] = 0;
   out_3957003700060578281[169] = 0;
   out_3957003700060578281[170] = 0;
   out_3957003700060578281[171] = 0;
   out_3957003700060578281[172] = 0;
   out_3957003700060578281[173] = 0;
   out_3957003700060578281[174] = 0;
   out_3957003700060578281[175] = 1.0;
   out_3957003700060578281[176] = 0;
   out_3957003700060578281[177] = 0;
   out_3957003700060578281[178] = 0;
   out_3957003700060578281[179] = 0;
   out_3957003700060578281[180] = 0;
   out_3957003700060578281[181] = 0;
   out_3957003700060578281[182] = 0;
   out_3957003700060578281[183] = 0;
   out_3957003700060578281[184] = 0;
   out_3957003700060578281[185] = 0;
   out_3957003700060578281[186] = 0;
   out_3957003700060578281[187] = 0;
   out_3957003700060578281[188] = 0;
   out_3957003700060578281[189] = 0;
   out_3957003700060578281[190] = 0;
   out_3957003700060578281[191] = 0;
   out_3957003700060578281[192] = 0;
   out_3957003700060578281[193] = 0;
   out_3957003700060578281[194] = 0;
   out_3957003700060578281[195] = 0;
   out_3957003700060578281[196] = 0;
   out_3957003700060578281[197] = 1.0;
   out_3957003700060578281[198] = 0;
   out_3957003700060578281[199] = 0;
   out_3957003700060578281[200] = 0;
   out_3957003700060578281[201] = 0;
   out_3957003700060578281[202] = 0;
   out_3957003700060578281[203] = 0;
   out_3957003700060578281[204] = 0;
   out_3957003700060578281[205] = 0;
   out_3957003700060578281[206] = 0;
   out_3957003700060578281[207] = 0;
   out_3957003700060578281[208] = 0;
   out_3957003700060578281[209] = 0;
   out_3957003700060578281[210] = 0;
   out_3957003700060578281[211] = 0;
   out_3957003700060578281[212] = 0;
   out_3957003700060578281[213] = 0;
   out_3957003700060578281[214] = 0;
   out_3957003700060578281[215] = 0;
   out_3957003700060578281[216] = 0;
   out_3957003700060578281[217] = 0;
   out_3957003700060578281[218] = 0;
   out_3957003700060578281[219] = 1.0;
   out_3957003700060578281[220] = 0;
   out_3957003700060578281[221] = 0;
   out_3957003700060578281[222] = 0;
   out_3957003700060578281[223] = 0;
   out_3957003700060578281[224] = 0;
   out_3957003700060578281[225] = 0;
   out_3957003700060578281[226] = 0;
   out_3957003700060578281[227] = 0;
   out_3957003700060578281[228] = 0;
   out_3957003700060578281[229] = 0;
   out_3957003700060578281[230] = 0;
   out_3957003700060578281[231] = 0;
   out_3957003700060578281[232] = 0;
   out_3957003700060578281[233] = 0;
   out_3957003700060578281[234] = 0;
   out_3957003700060578281[235] = 0;
   out_3957003700060578281[236] = 0;
   out_3957003700060578281[237] = 0;
   out_3957003700060578281[238] = 0;
   out_3957003700060578281[239] = 0;
   out_3957003700060578281[240] = 0;
   out_3957003700060578281[241] = 1.0;
   out_3957003700060578281[242] = 0;
   out_3957003700060578281[243] = 0;
   out_3957003700060578281[244] = 0;
   out_3957003700060578281[245] = 0;
   out_3957003700060578281[246] = 0;
   out_3957003700060578281[247] = 0;
   out_3957003700060578281[248] = 0;
   out_3957003700060578281[249] = 0;
   out_3957003700060578281[250] = 0;
   out_3957003700060578281[251] = 0;
   out_3957003700060578281[252] = 0;
   out_3957003700060578281[253] = 0;
   out_3957003700060578281[254] = 0;
   out_3957003700060578281[255] = 0;
   out_3957003700060578281[256] = 0;
   out_3957003700060578281[257] = 0;
   out_3957003700060578281[258] = 0;
   out_3957003700060578281[259] = 0;
   out_3957003700060578281[260] = 0;
   out_3957003700060578281[261] = 0;
   out_3957003700060578281[262] = 0;
   out_3957003700060578281[263] = 1.0;
   out_3957003700060578281[264] = 0;
   out_3957003700060578281[265] = 0;
   out_3957003700060578281[266] = 0;
   out_3957003700060578281[267] = 0;
   out_3957003700060578281[268] = 0;
   out_3957003700060578281[269] = 0;
   out_3957003700060578281[270] = 0;
   out_3957003700060578281[271] = 0;
   out_3957003700060578281[272] = 0;
   out_3957003700060578281[273] = 0;
   out_3957003700060578281[274] = 0;
   out_3957003700060578281[275] = 0;
   out_3957003700060578281[276] = 0;
   out_3957003700060578281[277] = 0;
   out_3957003700060578281[278] = 0;
   out_3957003700060578281[279] = 0;
   out_3957003700060578281[280] = 0;
   out_3957003700060578281[281] = 0;
   out_3957003700060578281[282] = 0;
   out_3957003700060578281[283] = 0;
   out_3957003700060578281[284] = 0;
   out_3957003700060578281[285] = 1.0;
   out_3957003700060578281[286] = 0;
   out_3957003700060578281[287] = 0;
   out_3957003700060578281[288] = 0;
   out_3957003700060578281[289] = 0;
   out_3957003700060578281[290] = 0;
   out_3957003700060578281[291] = 0;
   out_3957003700060578281[292] = 0;
   out_3957003700060578281[293] = 0;
   out_3957003700060578281[294] = 0;
   out_3957003700060578281[295] = 0;
   out_3957003700060578281[296] = 0;
   out_3957003700060578281[297] = 0;
   out_3957003700060578281[298] = 0;
   out_3957003700060578281[299] = 0;
   out_3957003700060578281[300] = 0;
   out_3957003700060578281[301] = 0;
   out_3957003700060578281[302] = 0;
   out_3957003700060578281[303] = 0;
   out_3957003700060578281[304] = 0;
   out_3957003700060578281[305] = 0;
   out_3957003700060578281[306] = 0;
   out_3957003700060578281[307] = 1.0;
   out_3957003700060578281[308] = 0;
   out_3957003700060578281[309] = 0;
   out_3957003700060578281[310] = 0;
   out_3957003700060578281[311] = 0;
   out_3957003700060578281[312] = 0;
   out_3957003700060578281[313] = 0;
   out_3957003700060578281[314] = 0;
   out_3957003700060578281[315] = 0;
   out_3957003700060578281[316] = 0;
   out_3957003700060578281[317] = 0;
   out_3957003700060578281[318] = 0;
   out_3957003700060578281[319] = 0;
   out_3957003700060578281[320] = 0;
   out_3957003700060578281[321] = 0;
   out_3957003700060578281[322] = 0;
   out_3957003700060578281[323] = 0;
   out_3957003700060578281[324] = 0;
   out_3957003700060578281[325] = 0;
   out_3957003700060578281[326] = 0;
   out_3957003700060578281[327] = 0;
   out_3957003700060578281[328] = 0;
   out_3957003700060578281[329] = 1.0;
   out_3957003700060578281[330] = 0;
   out_3957003700060578281[331] = 0;
   out_3957003700060578281[332] = 0;
   out_3957003700060578281[333] = 0;
   out_3957003700060578281[334] = 0;
   out_3957003700060578281[335] = 0;
   out_3957003700060578281[336] = 0;
   out_3957003700060578281[337] = 0;
   out_3957003700060578281[338] = 0;
   out_3957003700060578281[339] = 0;
   out_3957003700060578281[340] = 0;
   out_3957003700060578281[341] = 0;
   out_3957003700060578281[342] = 0;
   out_3957003700060578281[343] = 0;
   out_3957003700060578281[344] = 0;
   out_3957003700060578281[345] = 0;
   out_3957003700060578281[346] = 0;
   out_3957003700060578281[347] = 0;
   out_3957003700060578281[348] = 0;
   out_3957003700060578281[349] = 0;
   out_3957003700060578281[350] = 0;
   out_3957003700060578281[351] = 1.0;
   out_3957003700060578281[352] = 0;
   out_3957003700060578281[353] = 0;
   out_3957003700060578281[354] = 0;
   out_3957003700060578281[355] = 0;
   out_3957003700060578281[356] = 0;
   out_3957003700060578281[357] = 0;
   out_3957003700060578281[358] = 0;
   out_3957003700060578281[359] = 0;
   out_3957003700060578281[360] = 0;
   out_3957003700060578281[361] = 0;
   out_3957003700060578281[362] = 0;
   out_3957003700060578281[363] = 0;
   out_3957003700060578281[364] = 0;
   out_3957003700060578281[365] = 0;
   out_3957003700060578281[366] = 0;
   out_3957003700060578281[367] = 0;
   out_3957003700060578281[368] = 0;
   out_3957003700060578281[369] = 0;
   out_3957003700060578281[370] = 0;
   out_3957003700060578281[371] = 0;
   out_3957003700060578281[372] = 0;
   out_3957003700060578281[373] = 1.0;
   out_3957003700060578281[374] = 0;
   out_3957003700060578281[375] = 0;
   out_3957003700060578281[376] = 0;
   out_3957003700060578281[377] = 0;
   out_3957003700060578281[378] = 0;
   out_3957003700060578281[379] = 0;
   out_3957003700060578281[380] = 0;
   out_3957003700060578281[381] = 0;
   out_3957003700060578281[382] = 0;
   out_3957003700060578281[383] = 0;
   out_3957003700060578281[384] = 0;
   out_3957003700060578281[385] = 0;
   out_3957003700060578281[386] = 0;
   out_3957003700060578281[387] = 0;
   out_3957003700060578281[388] = 0;
   out_3957003700060578281[389] = 0;
   out_3957003700060578281[390] = 0;
   out_3957003700060578281[391] = 0;
   out_3957003700060578281[392] = 0;
   out_3957003700060578281[393] = 0;
   out_3957003700060578281[394] = 0;
   out_3957003700060578281[395] = 1.0;
   out_3957003700060578281[396] = 0;
   out_3957003700060578281[397] = 0;
   out_3957003700060578281[398] = 0;
   out_3957003700060578281[399] = 0;
   out_3957003700060578281[400] = 0;
   out_3957003700060578281[401] = 0;
   out_3957003700060578281[402] = 0;
   out_3957003700060578281[403] = 0;
   out_3957003700060578281[404] = 0;
   out_3957003700060578281[405] = 0;
   out_3957003700060578281[406] = 0;
   out_3957003700060578281[407] = 0;
   out_3957003700060578281[408] = 0;
   out_3957003700060578281[409] = 0;
   out_3957003700060578281[410] = 0;
   out_3957003700060578281[411] = 0;
   out_3957003700060578281[412] = 0;
   out_3957003700060578281[413] = 0;
   out_3957003700060578281[414] = 0;
   out_3957003700060578281[415] = 0;
   out_3957003700060578281[416] = 0;
   out_3957003700060578281[417] = 1.0;
   out_3957003700060578281[418] = 0;
   out_3957003700060578281[419] = 0;
   out_3957003700060578281[420] = 0;
   out_3957003700060578281[421] = 0;
   out_3957003700060578281[422] = 0;
   out_3957003700060578281[423] = 0;
   out_3957003700060578281[424] = 0;
   out_3957003700060578281[425] = 0;
   out_3957003700060578281[426] = 0;
   out_3957003700060578281[427] = 0;
   out_3957003700060578281[428] = 0;
   out_3957003700060578281[429] = 0;
   out_3957003700060578281[430] = 0;
   out_3957003700060578281[431] = 0;
   out_3957003700060578281[432] = 0;
   out_3957003700060578281[433] = 0;
   out_3957003700060578281[434] = 0;
   out_3957003700060578281[435] = 0;
   out_3957003700060578281[436] = 0;
   out_3957003700060578281[437] = 0;
   out_3957003700060578281[438] = 0;
   out_3957003700060578281[439] = 1.0;
   out_3957003700060578281[440] = 0;
   out_3957003700060578281[441] = 0;
   out_3957003700060578281[442] = 0;
   out_3957003700060578281[443] = 0;
   out_3957003700060578281[444] = 0;
   out_3957003700060578281[445] = 0;
   out_3957003700060578281[446] = 0;
   out_3957003700060578281[447] = 0;
   out_3957003700060578281[448] = 0;
   out_3957003700060578281[449] = 0;
   out_3957003700060578281[450] = 0;
   out_3957003700060578281[451] = 0;
   out_3957003700060578281[452] = 0;
   out_3957003700060578281[453] = 0;
   out_3957003700060578281[454] = 0;
   out_3957003700060578281[455] = 0;
   out_3957003700060578281[456] = 0;
   out_3957003700060578281[457] = 0;
   out_3957003700060578281[458] = 0;
   out_3957003700060578281[459] = 0;
   out_3957003700060578281[460] = 0;
   out_3957003700060578281[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_527245089978267491) {
   out_527245089978267491[0] = dt*state[7] + state[0];
   out_527245089978267491[1] = dt*state[8] + state[1];
   out_527245089978267491[2] = dt*state[9] + state[2];
   out_527245089978267491[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_527245089978267491[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_527245089978267491[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_527245089978267491[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_527245089978267491[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_527245089978267491[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_527245089978267491[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_527245089978267491[10] = state[10];
   out_527245089978267491[11] = state[11];
   out_527245089978267491[12] = state[12];
   out_527245089978267491[13] = state[13];
   out_527245089978267491[14] = state[14];
   out_527245089978267491[15] = state[15];
   out_527245089978267491[16] = state[16];
   out_527245089978267491[17] = state[17];
   out_527245089978267491[18] = state[18];
   out_527245089978267491[19] = state[19];
   out_527245089978267491[20] = state[20];
   out_527245089978267491[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4485576451842111367) {
   out_4485576451842111367[0] = 1;
   out_4485576451842111367[1] = 0;
   out_4485576451842111367[2] = 0;
   out_4485576451842111367[3] = 0;
   out_4485576451842111367[4] = 0;
   out_4485576451842111367[5] = 0;
   out_4485576451842111367[6] = dt;
   out_4485576451842111367[7] = 0;
   out_4485576451842111367[8] = 0;
   out_4485576451842111367[9] = 0;
   out_4485576451842111367[10] = 0;
   out_4485576451842111367[11] = 0;
   out_4485576451842111367[12] = 0;
   out_4485576451842111367[13] = 0;
   out_4485576451842111367[14] = 0;
   out_4485576451842111367[15] = 0;
   out_4485576451842111367[16] = 0;
   out_4485576451842111367[17] = 0;
   out_4485576451842111367[18] = 0;
   out_4485576451842111367[19] = 0;
   out_4485576451842111367[20] = 0;
   out_4485576451842111367[21] = 0;
   out_4485576451842111367[22] = 1;
   out_4485576451842111367[23] = 0;
   out_4485576451842111367[24] = 0;
   out_4485576451842111367[25] = 0;
   out_4485576451842111367[26] = 0;
   out_4485576451842111367[27] = 0;
   out_4485576451842111367[28] = dt;
   out_4485576451842111367[29] = 0;
   out_4485576451842111367[30] = 0;
   out_4485576451842111367[31] = 0;
   out_4485576451842111367[32] = 0;
   out_4485576451842111367[33] = 0;
   out_4485576451842111367[34] = 0;
   out_4485576451842111367[35] = 0;
   out_4485576451842111367[36] = 0;
   out_4485576451842111367[37] = 0;
   out_4485576451842111367[38] = 0;
   out_4485576451842111367[39] = 0;
   out_4485576451842111367[40] = 0;
   out_4485576451842111367[41] = 0;
   out_4485576451842111367[42] = 0;
   out_4485576451842111367[43] = 0;
   out_4485576451842111367[44] = 1;
   out_4485576451842111367[45] = 0;
   out_4485576451842111367[46] = 0;
   out_4485576451842111367[47] = 0;
   out_4485576451842111367[48] = 0;
   out_4485576451842111367[49] = 0;
   out_4485576451842111367[50] = dt;
   out_4485576451842111367[51] = 0;
   out_4485576451842111367[52] = 0;
   out_4485576451842111367[53] = 0;
   out_4485576451842111367[54] = 0;
   out_4485576451842111367[55] = 0;
   out_4485576451842111367[56] = 0;
   out_4485576451842111367[57] = 0;
   out_4485576451842111367[58] = 0;
   out_4485576451842111367[59] = 0;
   out_4485576451842111367[60] = 0;
   out_4485576451842111367[61] = 0;
   out_4485576451842111367[62] = 0;
   out_4485576451842111367[63] = 0;
   out_4485576451842111367[64] = 0;
   out_4485576451842111367[65] = 0;
   out_4485576451842111367[66] = 1;
   out_4485576451842111367[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4485576451842111367[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4485576451842111367[69] = 0;
   out_4485576451842111367[70] = 0;
   out_4485576451842111367[71] = 0;
   out_4485576451842111367[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4485576451842111367[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4485576451842111367[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4485576451842111367[75] = 0;
   out_4485576451842111367[76] = 0;
   out_4485576451842111367[77] = 0;
   out_4485576451842111367[78] = 0;
   out_4485576451842111367[79] = 0;
   out_4485576451842111367[80] = 0;
   out_4485576451842111367[81] = 0;
   out_4485576451842111367[82] = 0;
   out_4485576451842111367[83] = 0;
   out_4485576451842111367[84] = 0;
   out_4485576451842111367[85] = 0;
   out_4485576451842111367[86] = 0;
   out_4485576451842111367[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4485576451842111367[88] = 1;
   out_4485576451842111367[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4485576451842111367[90] = 0;
   out_4485576451842111367[91] = 0;
   out_4485576451842111367[92] = 0;
   out_4485576451842111367[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4485576451842111367[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4485576451842111367[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4485576451842111367[96] = 0;
   out_4485576451842111367[97] = 0;
   out_4485576451842111367[98] = 0;
   out_4485576451842111367[99] = 0;
   out_4485576451842111367[100] = 0;
   out_4485576451842111367[101] = 0;
   out_4485576451842111367[102] = 0;
   out_4485576451842111367[103] = 0;
   out_4485576451842111367[104] = 0;
   out_4485576451842111367[105] = 0;
   out_4485576451842111367[106] = 0;
   out_4485576451842111367[107] = 0;
   out_4485576451842111367[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4485576451842111367[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4485576451842111367[110] = 1;
   out_4485576451842111367[111] = 0;
   out_4485576451842111367[112] = 0;
   out_4485576451842111367[113] = 0;
   out_4485576451842111367[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4485576451842111367[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4485576451842111367[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4485576451842111367[117] = 0;
   out_4485576451842111367[118] = 0;
   out_4485576451842111367[119] = 0;
   out_4485576451842111367[120] = 0;
   out_4485576451842111367[121] = 0;
   out_4485576451842111367[122] = 0;
   out_4485576451842111367[123] = 0;
   out_4485576451842111367[124] = 0;
   out_4485576451842111367[125] = 0;
   out_4485576451842111367[126] = 0;
   out_4485576451842111367[127] = 0;
   out_4485576451842111367[128] = 0;
   out_4485576451842111367[129] = 0;
   out_4485576451842111367[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4485576451842111367[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4485576451842111367[132] = 1;
   out_4485576451842111367[133] = 0;
   out_4485576451842111367[134] = 0;
   out_4485576451842111367[135] = 0;
   out_4485576451842111367[136] = 0;
   out_4485576451842111367[137] = 0;
   out_4485576451842111367[138] = 0;
   out_4485576451842111367[139] = 0;
   out_4485576451842111367[140] = 0;
   out_4485576451842111367[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4485576451842111367[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4485576451842111367[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4485576451842111367[144] = 0;
   out_4485576451842111367[145] = 0;
   out_4485576451842111367[146] = 0;
   out_4485576451842111367[147] = 0;
   out_4485576451842111367[148] = 0;
   out_4485576451842111367[149] = 0;
   out_4485576451842111367[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4485576451842111367[151] = 0;
   out_4485576451842111367[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4485576451842111367[153] = 0;
   out_4485576451842111367[154] = 1;
   out_4485576451842111367[155] = 0;
   out_4485576451842111367[156] = 0;
   out_4485576451842111367[157] = 0;
   out_4485576451842111367[158] = 0;
   out_4485576451842111367[159] = 0;
   out_4485576451842111367[160] = 0;
   out_4485576451842111367[161] = 0;
   out_4485576451842111367[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4485576451842111367[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4485576451842111367[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4485576451842111367[165] = 0;
   out_4485576451842111367[166] = 0;
   out_4485576451842111367[167] = 0;
   out_4485576451842111367[168] = 0;
   out_4485576451842111367[169] = 0;
   out_4485576451842111367[170] = 0;
   out_4485576451842111367[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4485576451842111367[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4485576451842111367[173] = 0;
   out_4485576451842111367[174] = 0;
   out_4485576451842111367[175] = 0;
   out_4485576451842111367[176] = 1;
   out_4485576451842111367[177] = 0;
   out_4485576451842111367[178] = 0;
   out_4485576451842111367[179] = 0;
   out_4485576451842111367[180] = 0;
   out_4485576451842111367[181] = 0;
   out_4485576451842111367[182] = 0;
   out_4485576451842111367[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4485576451842111367[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4485576451842111367[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4485576451842111367[186] = 0;
   out_4485576451842111367[187] = 0;
   out_4485576451842111367[188] = 0;
   out_4485576451842111367[189] = 0;
   out_4485576451842111367[190] = 0;
   out_4485576451842111367[191] = 0;
   out_4485576451842111367[192] = 0;
   out_4485576451842111367[193] = 0;
   out_4485576451842111367[194] = 0;
   out_4485576451842111367[195] = 0;
   out_4485576451842111367[196] = 0;
   out_4485576451842111367[197] = 0;
   out_4485576451842111367[198] = 1;
   out_4485576451842111367[199] = 0;
   out_4485576451842111367[200] = 0;
   out_4485576451842111367[201] = 0;
   out_4485576451842111367[202] = 0;
   out_4485576451842111367[203] = 0;
   out_4485576451842111367[204] = 0;
   out_4485576451842111367[205] = 0;
   out_4485576451842111367[206] = 0;
   out_4485576451842111367[207] = 0;
   out_4485576451842111367[208] = 0;
   out_4485576451842111367[209] = 0;
   out_4485576451842111367[210] = 0;
   out_4485576451842111367[211] = 0;
   out_4485576451842111367[212] = 0;
   out_4485576451842111367[213] = 0;
   out_4485576451842111367[214] = 0;
   out_4485576451842111367[215] = 0;
   out_4485576451842111367[216] = 0;
   out_4485576451842111367[217] = 0;
   out_4485576451842111367[218] = 0;
   out_4485576451842111367[219] = 0;
   out_4485576451842111367[220] = 1;
   out_4485576451842111367[221] = 0;
   out_4485576451842111367[222] = 0;
   out_4485576451842111367[223] = 0;
   out_4485576451842111367[224] = 0;
   out_4485576451842111367[225] = 0;
   out_4485576451842111367[226] = 0;
   out_4485576451842111367[227] = 0;
   out_4485576451842111367[228] = 0;
   out_4485576451842111367[229] = 0;
   out_4485576451842111367[230] = 0;
   out_4485576451842111367[231] = 0;
   out_4485576451842111367[232] = 0;
   out_4485576451842111367[233] = 0;
   out_4485576451842111367[234] = 0;
   out_4485576451842111367[235] = 0;
   out_4485576451842111367[236] = 0;
   out_4485576451842111367[237] = 0;
   out_4485576451842111367[238] = 0;
   out_4485576451842111367[239] = 0;
   out_4485576451842111367[240] = 0;
   out_4485576451842111367[241] = 0;
   out_4485576451842111367[242] = 1;
   out_4485576451842111367[243] = 0;
   out_4485576451842111367[244] = 0;
   out_4485576451842111367[245] = 0;
   out_4485576451842111367[246] = 0;
   out_4485576451842111367[247] = 0;
   out_4485576451842111367[248] = 0;
   out_4485576451842111367[249] = 0;
   out_4485576451842111367[250] = 0;
   out_4485576451842111367[251] = 0;
   out_4485576451842111367[252] = 0;
   out_4485576451842111367[253] = 0;
   out_4485576451842111367[254] = 0;
   out_4485576451842111367[255] = 0;
   out_4485576451842111367[256] = 0;
   out_4485576451842111367[257] = 0;
   out_4485576451842111367[258] = 0;
   out_4485576451842111367[259] = 0;
   out_4485576451842111367[260] = 0;
   out_4485576451842111367[261] = 0;
   out_4485576451842111367[262] = 0;
   out_4485576451842111367[263] = 0;
   out_4485576451842111367[264] = 1;
   out_4485576451842111367[265] = 0;
   out_4485576451842111367[266] = 0;
   out_4485576451842111367[267] = 0;
   out_4485576451842111367[268] = 0;
   out_4485576451842111367[269] = 0;
   out_4485576451842111367[270] = 0;
   out_4485576451842111367[271] = 0;
   out_4485576451842111367[272] = 0;
   out_4485576451842111367[273] = 0;
   out_4485576451842111367[274] = 0;
   out_4485576451842111367[275] = 0;
   out_4485576451842111367[276] = 0;
   out_4485576451842111367[277] = 0;
   out_4485576451842111367[278] = 0;
   out_4485576451842111367[279] = 0;
   out_4485576451842111367[280] = 0;
   out_4485576451842111367[281] = 0;
   out_4485576451842111367[282] = 0;
   out_4485576451842111367[283] = 0;
   out_4485576451842111367[284] = 0;
   out_4485576451842111367[285] = 0;
   out_4485576451842111367[286] = 1;
   out_4485576451842111367[287] = 0;
   out_4485576451842111367[288] = 0;
   out_4485576451842111367[289] = 0;
   out_4485576451842111367[290] = 0;
   out_4485576451842111367[291] = 0;
   out_4485576451842111367[292] = 0;
   out_4485576451842111367[293] = 0;
   out_4485576451842111367[294] = 0;
   out_4485576451842111367[295] = 0;
   out_4485576451842111367[296] = 0;
   out_4485576451842111367[297] = 0;
   out_4485576451842111367[298] = 0;
   out_4485576451842111367[299] = 0;
   out_4485576451842111367[300] = 0;
   out_4485576451842111367[301] = 0;
   out_4485576451842111367[302] = 0;
   out_4485576451842111367[303] = 0;
   out_4485576451842111367[304] = 0;
   out_4485576451842111367[305] = 0;
   out_4485576451842111367[306] = 0;
   out_4485576451842111367[307] = 0;
   out_4485576451842111367[308] = 1;
   out_4485576451842111367[309] = 0;
   out_4485576451842111367[310] = 0;
   out_4485576451842111367[311] = 0;
   out_4485576451842111367[312] = 0;
   out_4485576451842111367[313] = 0;
   out_4485576451842111367[314] = 0;
   out_4485576451842111367[315] = 0;
   out_4485576451842111367[316] = 0;
   out_4485576451842111367[317] = 0;
   out_4485576451842111367[318] = 0;
   out_4485576451842111367[319] = 0;
   out_4485576451842111367[320] = 0;
   out_4485576451842111367[321] = 0;
   out_4485576451842111367[322] = 0;
   out_4485576451842111367[323] = 0;
   out_4485576451842111367[324] = 0;
   out_4485576451842111367[325] = 0;
   out_4485576451842111367[326] = 0;
   out_4485576451842111367[327] = 0;
   out_4485576451842111367[328] = 0;
   out_4485576451842111367[329] = 0;
   out_4485576451842111367[330] = 1;
   out_4485576451842111367[331] = 0;
   out_4485576451842111367[332] = 0;
   out_4485576451842111367[333] = 0;
   out_4485576451842111367[334] = 0;
   out_4485576451842111367[335] = 0;
   out_4485576451842111367[336] = 0;
   out_4485576451842111367[337] = 0;
   out_4485576451842111367[338] = 0;
   out_4485576451842111367[339] = 0;
   out_4485576451842111367[340] = 0;
   out_4485576451842111367[341] = 0;
   out_4485576451842111367[342] = 0;
   out_4485576451842111367[343] = 0;
   out_4485576451842111367[344] = 0;
   out_4485576451842111367[345] = 0;
   out_4485576451842111367[346] = 0;
   out_4485576451842111367[347] = 0;
   out_4485576451842111367[348] = 0;
   out_4485576451842111367[349] = 0;
   out_4485576451842111367[350] = 0;
   out_4485576451842111367[351] = 0;
   out_4485576451842111367[352] = 1;
   out_4485576451842111367[353] = 0;
   out_4485576451842111367[354] = 0;
   out_4485576451842111367[355] = 0;
   out_4485576451842111367[356] = 0;
   out_4485576451842111367[357] = 0;
   out_4485576451842111367[358] = 0;
   out_4485576451842111367[359] = 0;
   out_4485576451842111367[360] = 0;
   out_4485576451842111367[361] = 0;
   out_4485576451842111367[362] = 0;
   out_4485576451842111367[363] = 0;
   out_4485576451842111367[364] = 0;
   out_4485576451842111367[365] = 0;
   out_4485576451842111367[366] = 0;
   out_4485576451842111367[367] = 0;
   out_4485576451842111367[368] = 0;
   out_4485576451842111367[369] = 0;
   out_4485576451842111367[370] = 0;
   out_4485576451842111367[371] = 0;
   out_4485576451842111367[372] = 0;
   out_4485576451842111367[373] = 0;
   out_4485576451842111367[374] = 1;
   out_4485576451842111367[375] = 0;
   out_4485576451842111367[376] = 0;
   out_4485576451842111367[377] = 0;
   out_4485576451842111367[378] = 0;
   out_4485576451842111367[379] = 0;
   out_4485576451842111367[380] = 0;
   out_4485576451842111367[381] = 0;
   out_4485576451842111367[382] = 0;
   out_4485576451842111367[383] = 0;
   out_4485576451842111367[384] = 0;
   out_4485576451842111367[385] = 0;
   out_4485576451842111367[386] = 0;
   out_4485576451842111367[387] = 0;
   out_4485576451842111367[388] = 0;
   out_4485576451842111367[389] = 0;
   out_4485576451842111367[390] = 0;
   out_4485576451842111367[391] = 0;
   out_4485576451842111367[392] = 0;
   out_4485576451842111367[393] = 0;
   out_4485576451842111367[394] = 0;
   out_4485576451842111367[395] = 0;
   out_4485576451842111367[396] = 1;
   out_4485576451842111367[397] = 0;
   out_4485576451842111367[398] = 0;
   out_4485576451842111367[399] = 0;
   out_4485576451842111367[400] = 0;
   out_4485576451842111367[401] = 0;
   out_4485576451842111367[402] = 0;
   out_4485576451842111367[403] = 0;
   out_4485576451842111367[404] = 0;
   out_4485576451842111367[405] = 0;
   out_4485576451842111367[406] = 0;
   out_4485576451842111367[407] = 0;
   out_4485576451842111367[408] = 0;
   out_4485576451842111367[409] = 0;
   out_4485576451842111367[410] = 0;
   out_4485576451842111367[411] = 0;
   out_4485576451842111367[412] = 0;
   out_4485576451842111367[413] = 0;
   out_4485576451842111367[414] = 0;
   out_4485576451842111367[415] = 0;
   out_4485576451842111367[416] = 0;
   out_4485576451842111367[417] = 0;
   out_4485576451842111367[418] = 1;
   out_4485576451842111367[419] = 0;
   out_4485576451842111367[420] = 0;
   out_4485576451842111367[421] = 0;
   out_4485576451842111367[422] = 0;
   out_4485576451842111367[423] = 0;
   out_4485576451842111367[424] = 0;
   out_4485576451842111367[425] = 0;
   out_4485576451842111367[426] = 0;
   out_4485576451842111367[427] = 0;
   out_4485576451842111367[428] = 0;
   out_4485576451842111367[429] = 0;
   out_4485576451842111367[430] = 0;
   out_4485576451842111367[431] = 0;
   out_4485576451842111367[432] = 0;
   out_4485576451842111367[433] = 0;
   out_4485576451842111367[434] = 0;
   out_4485576451842111367[435] = 0;
   out_4485576451842111367[436] = 0;
   out_4485576451842111367[437] = 0;
   out_4485576451842111367[438] = 0;
   out_4485576451842111367[439] = 0;
   out_4485576451842111367[440] = 1;
}
void h_4(double *state, double *unused, double *out_5083618636369239354) {
   out_5083618636369239354[0] = state[10] + state[13];
   out_5083618636369239354[1] = state[11] + state[14];
   out_5083618636369239354[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5537439906076635471) {
   out_5537439906076635471[0] = 0;
   out_5537439906076635471[1] = 0;
   out_5537439906076635471[2] = 0;
   out_5537439906076635471[3] = 0;
   out_5537439906076635471[4] = 0;
   out_5537439906076635471[5] = 0;
   out_5537439906076635471[6] = 0;
   out_5537439906076635471[7] = 0;
   out_5537439906076635471[8] = 0;
   out_5537439906076635471[9] = 0;
   out_5537439906076635471[10] = 1;
   out_5537439906076635471[11] = 0;
   out_5537439906076635471[12] = 0;
   out_5537439906076635471[13] = 1;
   out_5537439906076635471[14] = 0;
   out_5537439906076635471[15] = 0;
   out_5537439906076635471[16] = 0;
   out_5537439906076635471[17] = 0;
   out_5537439906076635471[18] = 0;
   out_5537439906076635471[19] = 0;
   out_5537439906076635471[20] = 0;
   out_5537439906076635471[21] = 0;
   out_5537439906076635471[22] = 0;
   out_5537439906076635471[23] = 0;
   out_5537439906076635471[24] = 0;
   out_5537439906076635471[25] = 0;
   out_5537439906076635471[26] = 0;
   out_5537439906076635471[27] = 0;
   out_5537439906076635471[28] = 0;
   out_5537439906076635471[29] = 0;
   out_5537439906076635471[30] = 0;
   out_5537439906076635471[31] = 0;
   out_5537439906076635471[32] = 0;
   out_5537439906076635471[33] = 1;
   out_5537439906076635471[34] = 0;
   out_5537439906076635471[35] = 0;
   out_5537439906076635471[36] = 1;
   out_5537439906076635471[37] = 0;
   out_5537439906076635471[38] = 0;
   out_5537439906076635471[39] = 0;
   out_5537439906076635471[40] = 0;
   out_5537439906076635471[41] = 0;
   out_5537439906076635471[42] = 0;
   out_5537439906076635471[43] = 0;
   out_5537439906076635471[44] = 0;
   out_5537439906076635471[45] = 0;
   out_5537439906076635471[46] = 0;
   out_5537439906076635471[47] = 0;
   out_5537439906076635471[48] = 0;
   out_5537439906076635471[49] = 0;
   out_5537439906076635471[50] = 0;
   out_5537439906076635471[51] = 0;
   out_5537439906076635471[52] = 0;
   out_5537439906076635471[53] = 0;
   out_5537439906076635471[54] = 0;
   out_5537439906076635471[55] = 0;
   out_5537439906076635471[56] = 1;
   out_5537439906076635471[57] = 0;
   out_5537439906076635471[58] = 0;
   out_5537439906076635471[59] = 1;
   out_5537439906076635471[60] = 0;
   out_5537439906076635471[61] = 0;
   out_5537439906076635471[62] = 0;
   out_5537439906076635471[63] = 0;
   out_5537439906076635471[64] = 0;
   out_5537439906076635471[65] = 0;
}
void h_9(double *state, double *unused, double *out_5191441572416926564) {
   out_5191441572416926564[0] = state[10];
   out_5191441572416926564[1] = state[11];
   out_5191441572416926564[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5778629552706226116) {
   out_5778629552706226116[0] = 0;
   out_5778629552706226116[1] = 0;
   out_5778629552706226116[2] = 0;
   out_5778629552706226116[3] = 0;
   out_5778629552706226116[4] = 0;
   out_5778629552706226116[5] = 0;
   out_5778629552706226116[6] = 0;
   out_5778629552706226116[7] = 0;
   out_5778629552706226116[8] = 0;
   out_5778629552706226116[9] = 0;
   out_5778629552706226116[10] = 1;
   out_5778629552706226116[11] = 0;
   out_5778629552706226116[12] = 0;
   out_5778629552706226116[13] = 0;
   out_5778629552706226116[14] = 0;
   out_5778629552706226116[15] = 0;
   out_5778629552706226116[16] = 0;
   out_5778629552706226116[17] = 0;
   out_5778629552706226116[18] = 0;
   out_5778629552706226116[19] = 0;
   out_5778629552706226116[20] = 0;
   out_5778629552706226116[21] = 0;
   out_5778629552706226116[22] = 0;
   out_5778629552706226116[23] = 0;
   out_5778629552706226116[24] = 0;
   out_5778629552706226116[25] = 0;
   out_5778629552706226116[26] = 0;
   out_5778629552706226116[27] = 0;
   out_5778629552706226116[28] = 0;
   out_5778629552706226116[29] = 0;
   out_5778629552706226116[30] = 0;
   out_5778629552706226116[31] = 0;
   out_5778629552706226116[32] = 0;
   out_5778629552706226116[33] = 1;
   out_5778629552706226116[34] = 0;
   out_5778629552706226116[35] = 0;
   out_5778629552706226116[36] = 0;
   out_5778629552706226116[37] = 0;
   out_5778629552706226116[38] = 0;
   out_5778629552706226116[39] = 0;
   out_5778629552706226116[40] = 0;
   out_5778629552706226116[41] = 0;
   out_5778629552706226116[42] = 0;
   out_5778629552706226116[43] = 0;
   out_5778629552706226116[44] = 0;
   out_5778629552706226116[45] = 0;
   out_5778629552706226116[46] = 0;
   out_5778629552706226116[47] = 0;
   out_5778629552706226116[48] = 0;
   out_5778629552706226116[49] = 0;
   out_5778629552706226116[50] = 0;
   out_5778629552706226116[51] = 0;
   out_5778629552706226116[52] = 0;
   out_5778629552706226116[53] = 0;
   out_5778629552706226116[54] = 0;
   out_5778629552706226116[55] = 0;
   out_5778629552706226116[56] = 1;
   out_5778629552706226116[57] = 0;
   out_5778629552706226116[58] = 0;
   out_5778629552706226116[59] = 0;
   out_5778629552706226116[60] = 0;
   out_5778629552706226116[61] = 0;
   out_5778629552706226116[62] = 0;
   out_5778629552706226116[63] = 0;
   out_5778629552706226116[64] = 0;
   out_5778629552706226116[65] = 0;
}
void h_10(double *state, double *unused, double *out_4694201907022710331) {
   out_4694201907022710331[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4694201907022710331[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4694201907022710331[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3014558940665275568) {
   out_3014558940665275568[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3014558940665275568[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3014558940665275568[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3014558940665275568[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3014558940665275568[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3014558940665275568[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3014558940665275568[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3014558940665275568[7] = 0;
   out_3014558940665275568[8] = 0;
   out_3014558940665275568[9] = 0;
   out_3014558940665275568[10] = 0;
   out_3014558940665275568[11] = 0;
   out_3014558940665275568[12] = 0;
   out_3014558940665275568[13] = 0;
   out_3014558940665275568[14] = 0;
   out_3014558940665275568[15] = 0;
   out_3014558940665275568[16] = 1;
   out_3014558940665275568[17] = 0;
   out_3014558940665275568[18] = 0;
   out_3014558940665275568[19] = 1;
   out_3014558940665275568[20] = 0;
   out_3014558940665275568[21] = 0;
   out_3014558940665275568[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3014558940665275568[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3014558940665275568[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3014558940665275568[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3014558940665275568[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3014558940665275568[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3014558940665275568[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3014558940665275568[29] = 0;
   out_3014558940665275568[30] = 0;
   out_3014558940665275568[31] = 0;
   out_3014558940665275568[32] = 0;
   out_3014558940665275568[33] = 0;
   out_3014558940665275568[34] = 0;
   out_3014558940665275568[35] = 0;
   out_3014558940665275568[36] = 0;
   out_3014558940665275568[37] = 0;
   out_3014558940665275568[38] = 0;
   out_3014558940665275568[39] = 1;
   out_3014558940665275568[40] = 0;
   out_3014558940665275568[41] = 0;
   out_3014558940665275568[42] = 1;
   out_3014558940665275568[43] = 0;
   out_3014558940665275568[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3014558940665275568[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3014558940665275568[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3014558940665275568[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3014558940665275568[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3014558940665275568[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3014558940665275568[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3014558940665275568[51] = 0;
   out_3014558940665275568[52] = 0;
   out_3014558940665275568[53] = 0;
   out_3014558940665275568[54] = 0;
   out_3014558940665275568[55] = 0;
   out_3014558940665275568[56] = 0;
   out_3014558940665275568[57] = 0;
   out_3014558940665275568[58] = 0;
   out_3014558940665275568[59] = 0;
   out_3014558940665275568[60] = 0;
   out_3014558940665275568[61] = 0;
   out_3014558940665275568[62] = 1;
   out_3014558940665275568[63] = 0;
   out_3014558940665275568[64] = 0;
   out_3014558940665275568[65] = 1;
}
void h_12(double *state, double *unused, double *out_7779712826253544198) {
   out_7779712826253544198[0] = state[0];
   out_7779712826253544198[1] = state[1];
   out_7779712826253544198[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7889847759600954350) {
   out_7889847759600954350[0] = 1;
   out_7889847759600954350[1] = 0;
   out_7889847759600954350[2] = 0;
   out_7889847759600954350[3] = 0;
   out_7889847759600954350[4] = 0;
   out_7889847759600954350[5] = 0;
   out_7889847759600954350[6] = 0;
   out_7889847759600954350[7] = 0;
   out_7889847759600954350[8] = 0;
   out_7889847759600954350[9] = 0;
   out_7889847759600954350[10] = 0;
   out_7889847759600954350[11] = 0;
   out_7889847759600954350[12] = 0;
   out_7889847759600954350[13] = 0;
   out_7889847759600954350[14] = 0;
   out_7889847759600954350[15] = 0;
   out_7889847759600954350[16] = 0;
   out_7889847759600954350[17] = 0;
   out_7889847759600954350[18] = 0;
   out_7889847759600954350[19] = 0;
   out_7889847759600954350[20] = 0;
   out_7889847759600954350[21] = 0;
   out_7889847759600954350[22] = 0;
   out_7889847759600954350[23] = 1;
   out_7889847759600954350[24] = 0;
   out_7889847759600954350[25] = 0;
   out_7889847759600954350[26] = 0;
   out_7889847759600954350[27] = 0;
   out_7889847759600954350[28] = 0;
   out_7889847759600954350[29] = 0;
   out_7889847759600954350[30] = 0;
   out_7889847759600954350[31] = 0;
   out_7889847759600954350[32] = 0;
   out_7889847759600954350[33] = 0;
   out_7889847759600954350[34] = 0;
   out_7889847759600954350[35] = 0;
   out_7889847759600954350[36] = 0;
   out_7889847759600954350[37] = 0;
   out_7889847759600954350[38] = 0;
   out_7889847759600954350[39] = 0;
   out_7889847759600954350[40] = 0;
   out_7889847759600954350[41] = 0;
   out_7889847759600954350[42] = 0;
   out_7889847759600954350[43] = 0;
   out_7889847759600954350[44] = 0;
   out_7889847759600954350[45] = 0;
   out_7889847759600954350[46] = 1;
   out_7889847759600954350[47] = 0;
   out_7889847759600954350[48] = 0;
   out_7889847759600954350[49] = 0;
   out_7889847759600954350[50] = 0;
   out_7889847759600954350[51] = 0;
   out_7889847759600954350[52] = 0;
   out_7889847759600954350[53] = 0;
   out_7889847759600954350[54] = 0;
   out_7889847759600954350[55] = 0;
   out_7889847759600954350[56] = 0;
   out_7889847759600954350[57] = 0;
   out_7889847759600954350[58] = 0;
   out_7889847759600954350[59] = 0;
   out_7889847759600954350[60] = 0;
   out_7889847759600954350[61] = 0;
   out_7889847759600954350[62] = 0;
   out_7889847759600954350[63] = 0;
   out_7889847759600954350[64] = 0;
   out_7889847759600954350[65] = 0;
}
void h_35(double *state, double *unused, double *out_1653953902525287304) {
   out_1653953902525287304[0] = state[7];
   out_1653953902525287304[1] = state[8];
   out_1653953902525287304[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8904101963449242847) {
   out_8904101963449242847[0] = 0;
   out_8904101963449242847[1] = 0;
   out_8904101963449242847[2] = 0;
   out_8904101963449242847[3] = 0;
   out_8904101963449242847[4] = 0;
   out_8904101963449242847[5] = 0;
   out_8904101963449242847[6] = 0;
   out_8904101963449242847[7] = 1;
   out_8904101963449242847[8] = 0;
   out_8904101963449242847[9] = 0;
   out_8904101963449242847[10] = 0;
   out_8904101963449242847[11] = 0;
   out_8904101963449242847[12] = 0;
   out_8904101963449242847[13] = 0;
   out_8904101963449242847[14] = 0;
   out_8904101963449242847[15] = 0;
   out_8904101963449242847[16] = 0;
   out_8904101963449242847[17] = 0;
   out_8904101963449242847[18] = 0;
   out_8904101963449242847[19] = 0;
   out_8904101963449242847[20] = 0;
   out_8904101963449242847[21] = 0;
   out_8904101963449242847[22] = 0;
   out_8904101963449242847[23] = 0;
   out_8904101963449242847[24] = 0;
   out_8904101963449242847[25] = 0;
   out_8904101963449242847[26] = 0;
   out_8904101963449242847[27] = 0;
   out_8904101963449242847[28] = 0;
   out_8904101963449242847[29] = 0;
   out_8904101963449242847[30] = 1;
   out_8904101963449242847[31] = 0;
   out_8904101963449242847[32] = 0;
   out_8904101963449242847[33] = 0;
   out_8904101963449242847[34] = 0;
   out_8904101963449242847[35] = 0;
   out_8904101963449242847[36] = 0;
   out_8904101963449242847[37] = 0;
   out_8904101963449242847[38] = 0;
   out_8904101963449242847[39] = 0;
   out_8904101963449242847[40] = 0;
   out_8904101963449242847[41] = 0;
   out_8904101963449242847[42] = 0;
   out_8904101963449242847[43] = 0;
   out_8904101963449242847[44] = 0;
   out_8904101963449242847[45] = 0;
   out_8904101963449242847[46] = 0;
   out_8904101963449242847[47] = 0;
   out_8904101963449242847[48] = 0;
   out_8904101963449242847[49] = 0;
   out_8904101963449242847[50] = 0;
   out_8904101963449242847[51] = 0;
   out_8904101963449242847[52] = 0;
   out_8904101963449242847[53] = 1;
   out_8904101963449242847[54] = 0;
   out_8904101963449242847[55] = 0;
   out_8904101963449242847[56] = 0;
   out_8904101963449242847[57] = 0;
   out_8904101963449242847[58] = 0;
   out_8904101963449242847[59] = 0;
   out_8904101963449242847[60] = 0;
   out_8904101963449242847[61] = 0;
   out_8904101963449242847[62] = 0;
   out_8904101963449242847[63] = 0;
   out_8904101963449242847[64] = 0;
   out_8904101963449242847[65] = 0;
}
void h_32(double *state, double *unused, double *out_6298947203429338932) {
   out_6298947203429338932[0] = state[3];
   out_6298947203429338932[1] = state[4];
   out_6298947203429338932[2] = state[5];
   out_6298947203429338932[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4563097187716135959) {
   out_4563097187716135959[0] = 0;
   out_4563097187716135959[1] = 0;
   out_4563097187716135959[2] = 0;
   out_4563097187716135959[3] = 1;
   out_4563097187716135959[4] = 0;
   out_4563097187716135959[5] = 0;
   out_4563097187716135959[6] = 0;
   out_4563097187716135959[7] = 0;
   out_4563097187716135959[8] = 0;
   out_4563097187716135959[9] = 0;
   out_4563097187716135959[10] = 0;
   out_4563097187716135959[11] = 0;
   out_4563097187716135959[12] = 0;
   out_4563097187716135959[13] = 0;
   out_4563097187716135959[14] = 0;
   out_4563097187716135959[15] = 0;
   out_4563097187716135959[16] = 0;
   out_4563097187716135959[17] = 0;
   out_4563097187716135959[18] = 0;
   out_4563097187716135959[19] = 0;
   out_4563097187716135959[20] = 0;
   out_4563097187716135959[21] = 0;
   out_4563097187716135959[22] = 0;
   out_4563097187716135959[23] = 0;
   out_4563097187716135959[24] = 0;
   out_4563097187716135959[25] = 0;
   out_4563097187716135959[26] = 1;
   out_4563097187716135959[27] = 0;
   out_4563097187716135959[28] = 0;
   out_4563097187716135959[29] = 0;
   out_4563097187716135959[30] = 0;
   out_4563097187716135959[31] = 0;
   out_4563097187716135959[32] = 0;
   out_4563097187716135959[33] = 0;
   out_4563097187716135959[34] = 0;
   out_4563097187716135959[35] = 0;
   out_4563097187716135959[36] = 0;
   out_4563097187716135959[37] = 0;
   out_4563097187716135959[38] = 0;
   out_4563097187716135959[39] = 0;
   out_4563097187716135959[40] = 0;
   out_4563097187716135959[41] = 0;
   out_4563097187716135959[42] = 0;
   out_4563097187716135959[43] = 0;
   out_4563097187716135959[44] = 0;
   out_4563097187716135959[45] = 0;
   out_4563097187716135959[46] = 0;
   out_4563097187716135959[47] = 0;
   out_4563097187716135959[48] = 0;
   out_4563097187716135959[49] = 1;
   out_4563097187716135959[50] = 0;
   out_4563097187716135959[51] = 0;
   out_4563097187716135959[52] = 0;
   out_4563097187716135959[53] = 0;
   out_4563097187716135959[54] = 0;
   out_4563097187716135959[55] = 0;
   out_4563097187716135959[56] = 0;
   out_4563097187716135959[57] = 0;
   out_4563097187716135959[58] = 0;
   out_4563097187716135959[59] = 0;
   out_4563097187716135959[60] = 0;
   out_4563097187716135959[61] = 0;
   out_4563097187716135959[62] = 0;
   out_4563097187716135959[63] = 0;
   out_4563097187716135959[64] = 0;
   out_4563097187716135959[65] = 0;
   out_4563097187716135959[66] = 0;
   out_4563097187716135959[67] = 0;
   out_4563097187716135959[68] = 0;
   out_4563097187716135959[69] = 0;
   out_4563097187716135959[70] = 0;
   out_4563097187716135959[71] = 0;
   out_4563097187716135959[72] = 1;
   out_4563097187716135959[73] = 0;
   out_4563097187716135959[74] = 0;
   out_4563097187716135959[75] = 0;
   out_4563097187716135959[76] = 0;
   out_4563097187716135959[77] = 0;
   out_4563097187716135959[78] = 0;
   out_4563097187716135959[79] = 0;
   out_4563097187716135959[80] = 0;
   out_4563097187716135959[81] = 0;
   out_4563097187716135959[82] = 0;
   out_4563097187716135959[83] = 0;
   out_4563097187716135959[84] = 0;
   out_4563097187716135959[85] = 0;
   out_4563097187716135959[86] = 0;
   out_4563097187716135959[87] = 0;
}
void h_13(double *state, double *unused, double *out_6115061610492001857) {
   out_6115061610492001857[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6115061610492001857[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6115061610492001857[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5775805087570586313) {
   out_5775805087570586313[0] = 0;
   out_5775805087570586313[1] = 0;
   out_5775805087570586313[2] = 0;
   out_5775805087570586313[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5775805087570586313[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5775805087570586313[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5775805087570586313[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5775805087570586313[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5775805087570586313[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5775805087570586313[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5775805087570586313[10] = 0;
   out_5775805087570586313[11] = 0;
   out_5775805087570586313[12] = 0;
   out_5775805087570586313[13] = 0;
   out_5775805087570586313[14] = 0;
   out_5775805087570586313[15] = 0;
   out_5775805087570586313[16] = 0;
   out_5775805087570586313[17] = 0;
   out_5775805087570586313[18] = 0;
   out_5775805087570586313[19] = 0;
   out_5775805087570586313[20] = 0;
   out_5775805087570586313[21] = 0;
   out_5775805087570586313[22] = 0;
   out_5775805087570586313[23] = 0;
   out_5775805087570586313[24] = 0;
   out_5775805087570586313[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5775805087570586313[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5775805087570586313[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5775805087570586313[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5775805087570586313[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5775805087570586313[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5775805087570586313[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5775805087570586313[32] = 0;
   out_5775805087570586313[33] = 0;
   out_5775805087570586313[34] = 0;
   out_5775805087570586313[35] = 0;
   out_5775805087570586313[36] = 0;
   out_5775805087570586313[37] = 0;
   out_5775805087570586313[38] = 0;
   out_5775805087570586313[39] = 0;
   out_5775805087570586313[40] = 0;
   out_5775805087570586313[41] = 0;
   out_5775805087570586313[42] = 0;
   out_5775805087570586313[43] = 0;
   out_5775805087570586313[44] = 0;
   out_5775805087570586313[45] = 0;
   out_5775805087570586313[46] = 0;
   out_5775805087570586313[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5775805087570586313[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5775805087570586313[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5775805087570586313[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5775805087570586313[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5775805087570586313[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5775805087570586313[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5775805087570586313[54] = 0;
   out_5775805087570586313[55] = 0;
   out_5775805087570586313[56] = 0;
   out_5775805087570586313[57] = 0;
   out_5775805087570586313[58] = 0;
   out_5775805087570586313[59] = 0;
   out_5775805087570586313[60] = 0;
   out_5775805087570586313[61] = 0;
   out_5775805087570586313[62] = 0;
   out_5775805087570586313[63] = 0;
   out_5775805087570586313[64] = 0;
   out_5775805087570586313[65] = 0;
}
void h_14(double *state, double *unused, double *out_5191441572416926564) {
   out_5191441572416926564[0] = state[10];
   out_5191441572416926564[1] = state[11];
   out_5191441572416926564[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5778629552706226116) {
   out_5778629552706226116[0] = 0;
   out_5778629552706226116[1] = 0;
   out_5778629552706226116[2] = 0;
   out_5778629552706226116[3] = 0;
   out_5778629552706226116[4] = 0;
   out_5778629552706226116[5] = 0;
   out_5778629552706226116[6] = 0;
   out_5778629552706226116[7] = 0;
   out_5778629552706226116[8] = 0;
   out_5778629552706226116[9] = 0;
   out_5778629552706226116[10] = 1;
   out_5778629552706226116[11] = 0;
   out_5778629552706226116[12] = 0;
   out_5778629552706226116[13] = 0;
   out_5778629552706226116[14] = 0;
   out_5778629552706226116[15] = 0;
   out_5778629552706226116[16] = 0;
   out_5778629552706226116[17] = 0;
   out_5778629552706226116[18] = 0;
   out_5778629552706226116[19] = 0;
   out_5778629552706226116[20] = 0;
   out_5778629552706226116[21] = 0;
   out_5778629552706226116[22] = 0;
   out_5778629552706226116[23] = 0;
   out_5778629552706226116[24] = 0;
   out_5778629552706226116[25] = 0;
   out_5778629552706226116[26] = 0;
   out_5778629552706226116[27] = 0;
   out_5778629552706226116[28] = 0;
   out_5778629552706226116[29] = 0;
   out_5778629552706226116[30] = 0;
   out_5778629552706226116[31] = 0;
   out_5778629552706226116[32] = 0;
   out_5778629552706226116[33] = 1;
   out_5778629552706226116[34] = 0;
   out_5778629552706226116[35] = 0;
   out_5778629552706226116[36] = 0;
   out_5778629552706226116[37] = 0;
   out_5778629552706226116[38] = 0;
   out_5778629552706226116[39] = 0;
   out_5778629552706226116[40] = 0;
   out_5778629552706226116[41] = 0;
   out_5778629552706226116[42] = 0;
   out_5778629552706226116[43] = 0;
   out_5778629552706226116[44] = 0;
   out_5778629552706226116[45] = 0;
   out_5778629552706226116[46] = 0;
   out_5778629552706226116[47] = 0;
   out_5778629552706226116[48] = 0;
   out_5778629552706226116[49] = 0;
   out_5778629552706226116[50] = 0;
   out_5778629552706226116[51] = 0;
   out_5778629552706226116[52] = 0;
   out_5778629552706226116[53] = 0;
   out_5778629552706226116[54] = 0;
   out_5778629552706226116[55] = 0;
   out_5778629552706226116[56] = 1;
   out_5778629552706226116[57] = 0;
   out_5778629552706226116[58] = 0;
   out_5778629552706226116[59] = 0;
   out_5778629552706226116[60] = 0;
   out_5778629552706226116[61] = 0;
   out_5778629552706226116[62] = 0;
   out_5778629552706226116[63] = 0;
   out_5778629552706226116[64] = 0;
   out_5778629552706226116[65] = 0;
}
void h_33(double *state, double *unused, double *out_4623361709124221677) {
   out_4623361709124221677[0] = state[16];
   out_4623361709124221677[1] = state[17];
   out_4623361709124221677[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6392085105621451165) {
   out_6392085105621451165[0] = 0;
   out_6392085105621451165[1] = 0;
   out_6392085105621451165[2] = 0;
   out_6392085105621451165[3] = 0;
   out_6392085105621451165[4] = 0;
   out_6392085105621451165[5] = 0;
   out_6392085105621451165[6] = 0;
   out_6392085105621451165[7] = 0;
   out_6392085105621451165[8] = 0;
   out_6392085105621451165[9] = 0;
   out_6392085105621451165[10] = 0;
   out_6392085105621451165[11] = 0;
   out_6392085105621451165[12] = 0;
   out_6392085105621451165[13] = 0;
   out_6392085105621451165[14] = 0;
   out_6392085105621451165[15] = 0;
   out_6392085105621451165[16] = 1;
   out_6392085105621451165[17] = 0;
   out_6392085105621451165[18] = 0;
   out_6392085105621451165[19] = 0;
   out_6392085105621451165[20] = 0;
   out_6392085105621451165[21] = 0;
   out_6392085105621451165[22] = 0;
   out_6392085105621451165[23] = 0;
   out_6392085105621451165[24] = 0;
   out_6392085105621451165[25] = 0;
   out_6392085105621451165[26] = 0;
   out_6392085105621451165[27] = 0;
   out_6392085105621451165[28] = 0;
   out_6392085105621451165[29] = 0;
   out_6392085105621451165[30] = 0;
   out_6392085105621451165[31] = 0;
   out_6392085105621451165[32] = 0;
   out_6392085105621451165[33] = 0;
   out_6392085105621451165[34] = 0;
   out_6392085105621451165[35] = 0;
   out_6392085105621451165[36] = 0;
   out_6392085105621451165[37] = 0;
   out_6392085105621451165[38] = 0;
   out_6392085105621451165[39] = 1;
   out_6392085105621451165[40] = 0;
   out_6392085105621451165[41] = 0;
   out_6392085105621451165[42] = 0;
   out_6392085105621451165[43] = 0;
   out_6392085105621451165[44] = 0;
   out_6392085105621451165[45] = 0;
   out_6392085105621451165[46] = 0;
   out_6392085105621451165[47] = 0;
   out_6392085105621451165[48] = 0;
   out_6392085105621451165[49] = 0;
   out_6392085105621451165[50] = 0;
   out_6392085105621451165[51] = 0;
   out_6392085105621451165[52] = 0;
   out_6392085105621451165[53] = 0;
   out_6392085105621451165[54] = 0;
   out_6392085105621451165[55] = 0;
   out_6392085105621451165[56] = 0;
   out_6392085105621451165[57] = 0;
   out_6392085105621451165[58] = 0;
   out_6392085105621451165[59] = 0;
   out_6392085105621451165[60] = 0;
   out_6392085105621451165[61] = 0;
   out_6392085105621451165[62] = 1;
   out_6392085105621451165[63] = 0;
   out_6392085105621451165[64] = 0;
   out_6392085105621451165[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3802695452116108024) {
  H(in_vec, out_3802695452116108024);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2043090151300958853) {
  err_fun(nom_x, delta_x, out_2043090151300958853);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4795362139913636671) {
  inv_err_fun(nom_x, true_x, out_4795362139913636671);
}
void live_H_mod_fun(double *state, double *out_3957003700060578281) {
  H_mod_fun(state, out_3957003700060578281);
}
void live_f_fun(double *state, double dt, double *out_527245089978267491) {
  f_fun(state,  dt, out_527245089978267491);
}
void live_F_fun(double *state, double dt, double *out_4485576451842111367) {
  F_fun(state,  dt, out_4485576451842111367);
}
void live_h_4(double *state, double *unused, double *out_5083618636369239354) {
  h_4(state, unused, out_5083618636369239354);
}
void live_H_4(double *state, double *unused, double *out_5537439906076635471) {
  H_4(state, unused, out_5537439906076635471);
}
void live_h_9(double *state, double *unused, double *out_5191441572416926564) {
  h_9(state, unused, out_5191441572416926564);
}
void live_H_9(double *state, double *unused, double *out_5778629552706226116) {
  H_9(state, unused, out_5778629552706226116);
}
void live_h_10(double *state, double *unused, double *out_4694201907022710331) {
  h_10(state, unused, out_4694201907022710331);
}
void live_H_10(double *state, double *unused, double *out_3014558940665275568) {
  H_10(state, unused, out_3014558940665275568);
}
void live_h_12(double *state, double *unused, double *out_7779712826253544198) {
  h_12(state, unused, out_7779712826253544198);
}
void live_H_12(double *state, double *unused, double *out_7889847759600954350) {
  H_12(state, unused, out_7889847759600954350);
}
void live_h_35(double *state, double *unused, double *out_1653953902525287304) {
  h_35(state, unused, out_1653953902525287304);
}
void live_H_35(double *state, double *unused, double *out_8904101963449242847) {
  H_35(state, unused, out_8904101963449242847);
}
void live_h_32(double *state, double *unused, double *out_6298947203429338932) {
  h_32(state, unused, out_6298947203429338932);
}
void live_H_32(double *state, double *unused, double *out_4563097187716135959) {
  H_32(state, unused, out_4563097187716135959);
}
void live_h_13(double *state, double *unused, double *out_6115061610492001857) {
  h_13(state, unused, out_6115061610492001857);
}
void live_H_13(double *state, double *unused, double *out_5775805087570586313) {
  H_13(state, unused, out_5775805087570586313);
}
void live_h_14(double *state, double *unused, double *out_5191441572416926564) {
  h_14(state, unused, out_5191441572416926564);
}
void live_H_14(double *state, double *unused, double *out_5778629552706226116) {
  H_14(state, unused, out_5778629552706226116);
}
void live_h_33(double *state, double *unused, double *out_4623361709124221677) {
  h_33(state, unused, out_4623361709124221677);
}
void live_H_33(double *state, double *unused, double *out_6392085105621451165) {
  H_33(state, unused, out_6392085105621451165);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
